/**
 * Openapi specification - Darshan
 * OpenApi documentation for Spring security
 *
 * The version of the OpenAPI document: 1.0
 * Contact: walnut2918@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenapiSpecificationDarshan);
  }
}(this, function(expect, OpenapiSpecificationDarshan) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenapiSpecificationDarshan.NotesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NotesApi', function() {
    describe('approvereturnBorrowNotes', function() {
      it('should call approvereturnBorrowNotes successfully', function(done) {
        //uncomment below and update the code to test approvereturnBorrowNotes
        //instance.approvereturnBorrowNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowNotes', function() {
      it('should call borrowNotes successfully', function(done) {
        //uncomment below and update the code to test borrowNotes
        //instance.borrowNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findAllBorrowedNotes', function() {
      it('should call findAllBorrowedNotes successfully', function(done) {
        //uncomment below and update the code to test findAllBorrowedNotes
        //instance.findAllBorrowedNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findAllNotes', function() {
      it('should call findAllNotes successfully', function(done) {
        //uncomment below and update the code to test findAllNotes
        //instance.findAllNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findAllNotesByOwner', function() {
      it('should call findAllNotesByOwner successfully', function(done) {
        //uncomment below and update the code to test findAllNotesByOwner
        //instance.findAllNotesByOwner(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findAllReturnedNotes', function() {
      it('should call findAllReturnedNotes successfully', function(done) {
        //uncomment below and update the code to test findAllReturnedNotes
        //instance.findAllReturnedNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findNotesById', function() {
      it('should call findNotesById successfully', function(done) {
        //uncomment below and update the code to test findNotesById
        //instance.findNotesById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('returnBorrowNotes', function() {
      it('should call returnBorrowNotes successfully', function(done) {
        //uncomment below and update the code to test returnBorrowNotes
        //instance.returnBorrowNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveNote', function() {
      it('should call saveNote successfully', function(done) {
        //uncomment below and update the code to test saveNote
        //instance.saveNote(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateArchivedStatus', function() {
      it('should call updateArchivedStatus successfully', function(done) {
        //uncomment below and update the code to test updateArchivedStatus
        //instance.updateArchivedStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateShareableStatus', function() {
      it('should call updateShareableStatus successfully', function(done) {
        //uncomment below and update the code to test updateShareableStatus
        //instance.updateShareableStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadNotesCoverPage', function() {
      it('should call uploadNotesCoverPage successfully', function(done) {
        //uncomment below and update the code to test uploadNotesCoverPage
        //instance.uploadNotesCoverPage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
